/*
! tailwindcss v3.4.1 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: currentColor;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: "Kumbh Sans", ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

dialog {
  opacity: 0;
  transition:
         opacity 700ms,
         display 700ms allow-discrete,
         overlay 700ms allow-discrete;
}

dialog[open] {
  opacity: 1;
}

@starting-style {
  dialog[open] {
    opacity: 0;
  }
}

@media (prefers-reduced-motion: reduce) {
  *,
      *::before,
      *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.container {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
  padding-right: 2rem;
  padding-left: 2rem;
}

@media (min-width: 64rem) {
  .container {
    max-width: 64rem;
  }
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.visible {
  visibility: visible;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.inset-0 {
  inset: 0px;
}

.bottom-0 {
  bottom: 0px;
}

.left-0 {
  left: 0px;
}

.left-5 {
  left: 1.25rem;
}

.left-6 {
  left: 1.5rem;
}

.right-0 {
  right: 0px;
}

.right-6 {
  right: 1.5rem;
}

.top-0 {
  top: 0px;
}

.top-1\/2 {
  top: 50%;
}

.top-\[1\.71rem\] {
  top: 1.71rem;
}

.z-20 {
  z-index: 20;
}

.z-30 {
  z-index: 30;
}

.z-40 {
  z-index: 40;
}

.z-50 {
  z-index: 50;
}

.float-right {
  float: right;
}

.clear-right {
  clear: right;
}

.m-0 {
  margin: 0px;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.mb-4 {
  margin-bottom: 1rem;
}

.mb-6 {
  margin-bottom: 1.5rem;
}

.mt-4 {
  margin-top: 1rem;
}

.mt-8 {
  margin-top: 2rem;
}

.block {
  display: block;
}

.flex {
  display: flex;
}

.grid {
  display: grid;
}

.contents {
  display: contents;
}

.hidden {
  display: none;
}

.aspect-\[4\/3\] {
  aspect-ratio: 4/3;
}

.aspect-square {
  aspect-ratio: 1 / 1;
}

.size-full {
  width: 100%;
  height: 100%;
}

.h-0 {
  height: 0px;
}

.h-0\.5 {
  height: 0.125rem;
}

.h-18 {
  height: 4.5rem;
}

.h-full {
  height: 100%;
}

.h-min {
  height: -moz-min-content;
  height: min-content;
}

.h-screen {
  height: 100vh;
}

.max-h-96 {
  max-height: 24rem;
}

.max-h-none {
  max-height: none;
}

.min-h-52 {
  min-height: 13rem;
}

.min-h-screen {
  min-height: 100vh;
}

.w-\[clamp\(1\.6rem\2c 6vw\2c 3rem\)\] {
  width: clamp(1.6rem,6vw,3rem);
}

.w-\[min\(21rem\2c 95vw\)\] {
  width: min(21rem,95vw);
}

.w-full {
  width: 100%;
}

.w-min {
  width: -moz-min-content;
  width: min-content;
}

.w-screen {
  width: 100vw;
}

.min-w-4 {
  min-width: 1rem;
}

.max-w-12 {
  max-width: 3rem;
}

.max-w-24 {
  max-width: 6rem;
}

.max-w-md {
  max-width: 28rem;
}

.max-w-none {
  max-width: none;
}

.max-w-xl {
  max-width: 36rem;
}

.-translate-y-1\/2 {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-1\/2 {
  --tw-translate-x: 50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.select-none {
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

.resize {
  resize: both;
}

.grid-rows-2 {
  grid-template-rows: repeat(2, minmax(0, 1fr));
}

.grid-rows-\[max-content_min-content\] {
  grid-template-rows: max-content min-content;
}

.grid-rows-\[min-content_min-content_1fr\] {
  grid-template-rows: min-content min-content 1fr;
}

.flex-col {
  flex-direction: column;
}

.place-items-center {
  place-items: center;
}

.content-between {
  align-content: space-between;
}

.items-center {
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.gap-4 {
  gap: 1rem;
}

.gap-\[clamp\(0\.8rem\2c 3vw\2c 2rem\)\] {
  gap: clamp(0.8rem,3vw,2rem);
}

.gap-x-4 {
  -moz-column-gap: 1rem;
       column-gap: 1rem;
}

.gap-x-8 {
  -moz-column-gap: 2rem;
       column-gap: 2rem;
}

.gap-x-\[clamp\(\.7rem\2c 5vw\2c 3rem\)\] {
  -moz-column-gap: clamp(.7rem,5vw,3rem);
       column-gap: clamp(.7rem,5vw,3rem);
}

.gap-x-\[clamp\(1rem\2c 5vw\2c 3rem\)\] {
  -moz-column-gap: clamp(1rem,5vw,3rem);
       column-gap: clamp(1rem,5vw,3rem);
}

.gap-x-\[clamp\(1rem\2c 5vw\2c 6rem\)\] {
  -moz-column-gap: clamp(1rem,5vw,6rem);
       column-gap: clamp(1rem,5vw,6rem);
}

.gap-y-4 {
  row-gap: 1rem;
}

.space-y-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}

.space-y-6 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1.5rem * var(--tw-space-y-reverse));
}

.overflow-hidden {
  overflow: hidden;
}

.overflow-y-auto {
  overflow-y: auto;
}

.overflow-x-hidden {
  overflow-x: hidden;
}

.rounded {
  border-radius: 0.25rem;
}

.rounded-full {
  border-radius: 9999px;
}

.rounded-lg {
  border-radius: 0.5rem;
}

.rounded-md {
  border-radius: 0.375rem;
}

.rounded-xl {
  border-radius: 0.75rem;
}

.border-b-2 {
  border-bottom-width: 2px;
}

.border-solid {
  border-style: solid;
}

.border-lightGrayishBlue {
  --tw-border-opacity: 1;
  border-color: hsl(223 64% 98% / var(--tw-border-opacity));
}

.bg-black {
  --tw-bg-opacity: 1;
  background-color: hsl(0 0% 0% / var(--tw-bg-opacity));
}

.bg-lightGrayishBlue {
  --tw-bg-opacity: 1;
  background-color: hsl(223 64% 98% / var(--tw-bg-opacity));
}

.bg-orange {
  --tw-bg-opacity: 1;
  background-color: hsl(26 100% 55% / var(--tw-bg-opacity));
}

.bg-paleOrange {
  --tw-bg-opacity: 1;
  background-color: hsl(25 100% 94% / var(--tw-bg-opacity));
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: hsl(0 0% 100% / var(--tw-bg-opacity));
}

.bg-opacity-60 {
  --tw-bg-opacity: 0.6;
}

.fill-gray {
  fill: hsl(219, 9%, 45%);
}

.fill-lightGray {
  fill: hsl(221, 22%, 81%);
}

.fill-white {
  fill: hsl(0 0% 100%);
}

.stroke-darkGray {
  stroke: hsl(220, 13%, 13%);
}

.object-cover {
  -o-object-fit: cover;
     object-fit: cover;
}

.object-center {
  -o-object-position: center;
     object-position: center;
}

.p-5 {
  padding: 1.25rem;
}

.p-6 {
  padding: 1.5rem;
}

.p-8 {
  padding: 2rem;
}

.px-1 {
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.px-5 {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}

.py-0 {
  padding-top: 0px;
  padding-bottom: 0px;
}

.py-0\.5 {
  padding-top: 0.125rem;
  padding-bottom: 0.125rem;
}

.py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.py-5 {
  padding-top: 1.25rem;
  padding-bottom: 1.25rem;
}

.py-8 {
  padding-top: 2rem;
  padding-bottom: 2rem;
}

.pl-5 {
  padding-left: 1.25rem;
}

.pt-20 {
  padding-top: 5rem;
}

.text-center {
  text-align: center;
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-3xl {
  font-size: 1.875rem;
  line-height: 2.25rem;
}

.text-\[0\.5rem\] {
  font-size: 0.5rem;
}

.text-\[clamp\(1\.875rem\2c 5vw\2c 3rem\)\] {
  font-size: clamp(1.875rem,5vw,3rem);
}

.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

.font-bold {
  font-weight: 700;
}

.font-extrabold {
  font-weight: 800;
}

.font-medium {
  font-weight: 500;
}

.font-semibold {
  font-weight: 600;
}

.uppercase {
  text-transform: uppercase;
}

.capitalize {
  text-transform: capitalize;
}

.leading-0 {
  line-height: 0;
}

.leading-none {
  line-height: 1;
}

.leading-normal {
  line-height: 1.5;
}

.leading-relaxed {
  line-height: 1.625;
}

.tracking-widest {
  letter-spacing: 0.1em;
}

.text-black {
  --tw-text-opacity: 1;
  color: hsl(0 0% 0% / var(--tw-text-opacity));
}

.text-darkGrayishBlue {
  --tw-text-opacity: 1;
  color: hsl(219 9% 45% / var(--tw-text-opacity));
}

.text-grayishBlue {
  --tw-text-opacity: 1;
  color: hsl(220 14% 75% / var(--tw-text-opacity));
}

.text-orange {
  --tw-text-opacity: 1;
  color: hsl(26 100% 55% / var(--tw-text-opacity));
}

.text-white {
  --tw-text-opacity: 1;
  color: hsl(0 0% 100% / var(--tw-text-opacity));
}

.underline {
  text-decoration-line: underline;
}

.line-through {
  text-decoration-line: line-through;
}

.opacity-60 {
  opacity: 0.6;
}

.shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-\[0_15px_60px_-15px_theme\(colors\.orange\)\] {
  --tw-shadow: 0 15px 60px -15px hsl(26, 100%, 55%);
  --tw-shadow-colored: 0 15px 60px -15px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.outline {
  outline-style: solid;
}

.outline-0 {
  outline-width: 0px;
}

.outline-2 {
  outline-width: 2px;
}

.outline-offset-0 {
  outline-offset: 0px;
}

.outline-offset-2 {
  outline-offset: 2px;
}

.outline-offset-8 {
  outline-offset: 8px;
}

.outline-orange {
  outline-color: hsl(26, 100%, 55%);
}

.drop-shadow-xl {
  --tw-drop-shadow: drop-shadow(0 20px 13px rgb(0 0 0 / 0.03)) drop-shadow(0 8px 5px rgb(0 0 0 / 0.08));
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-opacity {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

@media (min-width: 768px) {
  .md\:container {
    width: 100%;
    margin-right: auto;
    margin-left: auto;
    padding-right: 2rem;
    padding-left: 2rem;
  }

  @media (min-width: 64rem) {
    .md\:container {
      max-width: 64rem;
    }
  }
}

.focus-within\:before\:absolute:focus-within::before {
  content: var(--tw-content);
  position: absolute;
}

.focus-within\:before\:inset-x-0:focus-within::before {
  content: var(--tw-content);
  left: 0px;
  right: 0px;
}

.focus-within\:before\:top-full:focus-within::before {
  content: var(--tw-content);
  top: 100%;
}

.focus-within\:before\:block:focus-within::before {
  content: var(--tw-content);
  display: block;
}

.focus-within\:before\:h-0:focus-within::before {
  content: var(--tw-content);
  height: 0px;
}

.focus-within\:before\:h-0\.5:focus-within::before {
  content: var(--tw-content);
  height: 0.125rem;
}

.focus-within\:before\:bg-orange:focus-within::before {
  content: var(--tw-content);
  --tw-bg-opacity: 1;
  background-color: hsl(26 100% 55% / var(--tw-bg-opacity));
}

.hover\:fill-black:hover {
  fill: hsl(0 0% 0%);
}

.hover\:fill-orange:hover {
  fill: hsl(26, 100%, 55%);
}

.hover\:stroke-orange:hover {
  stroke: hsl(26, 100%, 55%);
}

.hover\:text-black:hover {
  --tw-text-opacity: 1;
  color: hsl(0 0% 0% / var(--tw-text-opacity));
}

.hover\:no-underline:hover {
  text-decoration-line: none;
}

.hover\:opacity-60:hover {
  opacity: 0.6;
}

.hover\:outline-2:hover {
  outline-width: 2px;
}

.hover\:before\:absolute:hover::before {
  content: var(--tw-content);
  position: absolute;
}

.hover\:before\:inset-x-0:hover::before {
  content: var(--tw-content);
  left: 0px;
  right: 0px;
}

.hover\:before\:top-full:hover::before {
  content: var(--tw-content);
  top: 100%;
}

.hover\:before\:block:hover::before {
  content: var(--tw-content);
  display: block;
}

.hover\:before\:h-0:hover::before {
  content: var(--tw-content);
  height: 0px;
}

.hover\:before\:h-0\.5:hover::before {
  content: var(--tw-content);
  height: 0.125rem;
}

.hover\:before\:bg-orange:hover::before {
  content: var(--tw-content);
  --tw-bg-opacity: 1;
  background-color: hsl(26 100% 55% / var(--tw-bg-opacity));
}

.focus-visible\:fill-black:focus-visible {
  fill: hsl(0 0% 0%);
}

.focus-visible\:fill-orange:focus-visible {
  fill: hsl(26, 100%, 55%);
}

.focus-visible\:stroke-orange:focus-visible {
  stroke: hsl(26, 100%, 55%);
}

.focus-visible\:text-black:focus-visible {
  --tw-text-opacity: 1;
  color: hsl(0 0% 0% / var(--tw-text-opacity));
}

.focus-visible\:outline-2:focus-visible {
  outline-width: 2px;
}

.focus-visible\:outline-\[3px\]:focus-visible {
  outline-width: 3px;
}

.focus-visible\:outline-offset-4:focus-visible {
  outline-offset: 4px;
}

.focus-visible\:outline-orange:focus-visible {
  outline-color: hsl(26, 100%, 55%);
}

.focus-visible\:outline-white:focus-visible {
  outline-color: hsl(0 0% 100%);
}

.active\:scale-75:active {
  --tw-scale-x: .75;
  --tw-scale-y: .75;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.active\:scale-95:active {
  --tw-scale-x: .95;
  --tw-scale-y: .95;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.group:hover .group-hover\:opacity-60 {
  opacity: 0.6;
}

@media (min-width: 640px) {
  .sm\:mx-auto {
    margin-left: auto;
    margin-right: auto;
  }

  .sm\:my-10 {
    margin-top: 2.5rem;
    margin-bottom: 2.5rem;
  }

  .sm\:aspect-square {
    aspect-ratio: 1 / 1;
  }

  .sm\:max-w-lg {
    max-width: 32rem;
  }

  .sm\:rounded-xl {
    border-radius: 0.75rem;
  }

  .sm\:px-0 {
    padding-left: 0px;
    padding-right: 0px;
  }
}

@media (min-width: 768px) {
  .md\:left-0 {
    left: 0px;
  }

  .md\:right-0 {
    right: 0px;
  }

  .md\:my-20 {
    margin-top: 5rem;
    margin-bottom: 5rem;
  }

  .md\:mt-0 {
    margin-top: 0px;
  }

  .md\:block {
    display: block;
  }

  .md\:flex {
    display: flex;
  }

  .md\:grid {
    display: grid;
  }

  .md\:hidden {
    display: none;
  }

  .md\:h-28 {
    height: 7rem;
  }

  .md\:h-full {
    height: 100%;
  }

  .md\:w-full {
    width: 100%;
  }

  .md\:max-w-none {
    max-width: none;
  }

  .md\:-translate-x-1\/2 {
    --tw-translate-x: -50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .md\:translate-x-1\/2 {
    --tw-translate-x: 50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .md\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .md\:grid-cols-\[2fr_3fr\] {
    grid-template-columns: 2fr 3fr;
  }

  .md\:grid-rows-1 {
    grid-template-rows: repeat(1, minmax(0, 1fr));
  }

  .md\:flex-row-reverse {
    flex-direction: row-reverse;
  }

  .md\:place-items-center {
    place-items: center;
  }

  .md\:border-0 {
    border-width: 0px;
  }

  .md\:border-b-2 {
    border-bottom-width: 2px;
  }

  .md\:p-0 {
    padding: 0px;
  }

  .md\:px-4 {
    padding-left: 1rem;
    padding-right: 1rem;
  }

  .md\:text-sm {
    font-size: 0.875rem;
    line-height: 1.25rem;
  }

  .md\:font-semibold {
    font-weight: 600;
  }

  .md\:text-darkGrayishBlue {
    --tw-text-opacity: 1;
    color: hsl(219 9% 45% / var(--tw-text-opacity));
  }

  .md\:focus-within\:before\:absolute:focus-within::before {
    content: var(--tw-content);
    position: absolute;
  }

  .md\:focus-within\:before\:inset-x-0:focus-within::before {
    content: var(--tw-content);
    left: 0px;
    right: 0px;
  }

  .md\:focus-within\:before\:top-full:focus-within::before {
    content: var(--tw-content);
    top: 100%;
  }

  .md\:focus-within\:before\:block:focus-within::before {
    content: var(--tw-content);
    display: block;
  }

  .md\:focus-within\:before\:h-0:focus-within::before {
    content: var(--tw-content);
    height: 0px;
  }

  .md\:focus-within\:before\:h-0\.5:focus-within::before {
    content: var(--tw-content);
    height: 0.125rem;
  }

  .md\:focus-within\:before\:bg-orange:focus-within::before {
    content: var(--tw-content);
    --tw-bg-opacity: 1;
    background-color: hsl(26 100% 55% / var(--tw-bg-opacity));
  }

  .md\:hover\:text-black:hover {
    --tw-text-opacity: 1;
    color: hsl(0 0% 0% / var(--tw-text-opacity));
  }

  .md\:hover\:before\:absolute:hover::before {
    content: var(--tw-content);
    position: absolute;
  }

  .md\:hover\:before\:inset-x-0:hover::before {
    content: var(--tw-content);
    left: 0px;
    right: 0px;
  }

  .md\:hover\:before\:top-full:hover::before {
    content: var(--tw-content);
    top: 100%;
  }

  .md\:hover\:before\:block:hover::before {
    content: var(--tw-content);
    display: block;
  }

  .md\:hover\:before\:h-0:hover::before {
    content: var(--tw-content);
    height: 0px;
  }

  .md\:hover\:before\:h-0\.5:hover::before {
    content: var(--tw-content);
    height: 0.125rem;
  }

  .md\:hover\:before\:bg-orange:hover::before {
    content: var(--tw-content);
    --tw-bg-opacity: 1;
    background-color: hsl(26 100% 55% / var(--tw-bg-opacity));
  }

  .md\:focus-visible\:text-black:focus-visible {
    --tw-text-opacity: 1;
    color: hsl(0 0% 0% / var(--tw-text-opacity));
  }
}